// Generated by view binder compiler. Do not edit!
package com.example.mmmmmmmmmmm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mmmmmmmmmmm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomsheetBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView adresse;

  @NonNull
  public final TextView categorie;

  @NonNull
  public final TextView detailedInstructionTextView;

  @NonNull
  public final TextView instructionTextView;

  @NonNull
  public final ImageView locationImageView;

  @NonNull
  public final TextView name;

  private BottomsheetBinding(@NonNull LinearLayout rootView, @NonNull TextView adresse,
      @NonNull TextView categorie, @NonNull TextView detailedInstructionTextView,
      @NonNull TextView instructionTextView, @NonNull ImageView locationImageView,
      @NonNull TextView name) {
    this.rootView = rootView;
    this.adresse = adresse;
    this.categorie = categorie;
    this.detailedInstructionTextView = detailedInstructionTextView;
    this.instructionTextView = instructionTextView;
    this.locationImageView = locationImageView;
    this.name = name;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomsheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomsheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottomsheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomsheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adresse;
      TextView adresse = ViewBindings.findChildViewById(rootView, id);
      if (adresse == null) {
        break missingId;
      }

      id = R.id.categorie;
      TextView categorie = ViewBindings.findChildViewById(rootView, id);
      if (categorie == null) {
        break missingId;
      }

      id = R.id.detailedInstructionTextView;
      TextView detailedInstructionTextView = ViewBindings.findChildViewById(rootView, id);
      if (detailedInstructionTextView == null) {
        break missingId;
      }

      id = R.id.instructionTextView;
      TextView instructionTextView = ViewBindings.findChildViewById(rootView, id);
      if (instructionTextView == null) {
        break missingId;
      }

      id = R.id.locationImageView;
      ImageView locationImageView = ViewBindings.findChildViewById(rootView, id);
      if (locationImageView == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      return new BottomsheetBinding((LinearLayout) rootView, adresse, categorie,
          detailedInstructionTextView, instructionTextView, locationImageView, name);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
